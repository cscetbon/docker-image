
# config to don't allow the browser to render the page inside an frame or iframe
# and avoid clickjacking http://en.wikipedia.org/wiki/Clickjacking
# if you need to allow [i]frames, you can use SAMEORIGIN or even set an uri with ALLOW-FROM uri
# https://developer.mozilla.org/en-US/docs/HTTP/X-Frame-Options
add_header X-Frame-Options "SAMEORIGIN";

# This header enables the Cross-site scripting (XSS) filter built into most recent web browsers.
# It's usually enabled by default anyway, so the role of this header is to re-enable the filter for
# this particular website if it was disabled by the user.
# https://www.owasp.org/index.php/List_of_useful_HTTP_headers
add_header X-XSS-Protection "1; mode=block";

# Enable Expire on Themes public assets
location ~* ^/themes/*.*\.(?:ico|css|woff2?|eot|ttf|otf|svg|js|gif|jpe?g|png)$ {
    expires 30d;
    access_log off;
    add_header Pragma "public";
    add_header Cache-Control "public";
    add_header Vary "Accept-Encoding";
}
# Enable Expire on native documents files
location ~* ^/files/*.*\.(?:ico|gif|jpe?g|png)$ {
    expires 15d;
    access_log off;
    add_header Pragma "public";
    add_header Cache-Control "public";
}

location / {
    # First attempt to serve request as file, then
    # as directory, then fall back to front-end controller
    # (do not forget to pass GET parameters).
    try_files $uri $uri/ /index.php?$query_string;

    # Uncomment to enable naxsi on this location
    # include /etc/nginx/naxsi.rules
}

# deny access to .htaccess files, if Apache's document root
# concurs with nginx's one

location ~ /\.ht {
    deny all;
}
location ~ /\.git {
    deny all;
}
location /src {
    deny all;
}
location /gen-src {
    deny all;
}
location /files/fonts {
    deny all;
}
location /files/private {
    deny all;
}
location /cache {
    deny all;
}
location /bin {
    deny all;
}
location /samples {
    deny all;
}
location /tests {
    deny all;
}
location /vendor {
    deny all;
}
location /conf {
    deny all;
}
location /logs {
    deny all;
}
